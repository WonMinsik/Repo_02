extends layout

block header
  link(rel='stylesheet', href='https://unpkg.com/leaflet@1.7.1/dist/leaflet.css', integrity='sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==', crossorigin='anonymous')
  link(rel='stylesheet', href='https://unpkg.com/leaflet-pulse-icon@0.1.0/src/L.Icon.Pulse.css')
  style.
    @import url(https://fonts.googleapis.com/css?family=Open+Sans);
    @import url(https://fonts.googleapis.com/css?family=Lobster);
    body {font-family: 'Open Sans', Verdana, Arial, sans-serif;}

    .sidenav {
      height: 100%;
      width: 0;
      position: fixed;
      z-index: 1;
      top: 0;
      left: 0;
      background-color: #111;
      overflow-x: hidden;
      transition: 0.5s;
      padding-top: 60px;
    }

    .sidenav a {
      padding: 8px 8px 8px 32px;
      text-decoration: none;
      font-size: 25px;
      color: #818181;
      display: block;
      transition: 0.3s;
    }

    .sidenav a:hover {
      color: #f1f1f1;
    }

    .sidenav .closebtn {
      position: absolute;
      top: 0;
      right: 25px;
      font-size: 36px;
      margin-left: 50px;
    }

    .table tbody tr.highlight td {
      background-color: #CFF5FF;
    }

    .fixed-table-head {
      overflow-y: auto;
      height: 600px;
    }

    .fixed-table-head thead th {
      background-color: #FFFFFF;
      position: sticky;
      top: 0;
    }

    .fixed-table-head tbody tr td {
      vertical-align: middle;
    }

    .switch {
      position: relative;
      display: inline-block;
      width: 90px;
      height: 24px;
    }
    .switch input {display:none;}
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #2ab934;
      -webkit-transition: .4s;
      transition: .4s;
      border-radius: 6px;
    }
    .slider:before {
      position: absolute;
      content: '';
      height: 22px;
      width: 32px;
      top: 1px;
      left: 1px;
      right: 1px;
      bottom: 1px;
      background-color: white;
      transition: 0.4s;
      border-radius: 6px;
    }
    input:checked + .slider {
      background-color: #ca2222;
    }
    input:focus + .slider {
      box-shadow: 0 0 1px #2196F3;
    }
    input:checked + .slider:before {
      -webkit-transform: translateX(26px);
      -ms-transform: translateX(26px);
      transform: translateX(55px);
    }
    .slider:after {
      content:'OFF';
      color: white;
      display: block;
      position: absolute;
      transform: translate(-50%,-50%);
      top: 50%;
      left: 70%;
      font-size: 10px;
      font-family: Verdana, sans-serif;
    }
    input:checked + .slider:after {
      content:'ON';
      left: 30%;
    }

    /* style inputs and link buttons */
    input,
    ._btn {
      width: 100%;
      /*padding: 12px;*/
      border: none;
      border-radius: 4px;
      /*margin: 5px 0;*/
      opacity: 0.85;
      display: inline-block;
      font-size: 17px;
      line-height: 20px;
      text-decoration: none; /* remove underline from anchors */
    }

    input:hover,
    ._btn:hover {
      opacity: 1;
    }
    /* add appropriate colors to fb, twitter and google buttons */
    .fb {
      background-color: #3B5998;
      color: white;
    }
    .twitter {
      background-color: #55ACEE;
      color: white;
    }
    .google {
      background-color: #dd4b39;
      color: white;
    }
    .green {
      background-color: green;
      color: white;
    }
    .orange {
      background-color: orange;
      color: white;
    }

    .bttn {
      border: none; /*2px solid black;*/
      border-radius: 2px;
      background-color: white;
      color: orange;
      /* padding: 14px 28px; */
      padding: 1px 1px;
      font-size: 12px;
      cursor: pointer;
      width: 100px;
    }
    /* Green */
    .success {
      border-color: #4CAF50;
      color: green;
      border-radius: 2px;
      margin-left: 4px;
      margin-top: 4px;
      margin-bottom: 4px;
    }
    .success:hover {
      background-color: #4CAF50;
      color: white;
    }
    /* Blue */
    .blue {
      font-family:'YouandiModern Head';
      border: 2px solid #2196F3;
      border-color: #2196F3;
      color: dodgerblue;
      border-radius: 2px;
      /* margin-left: 4px;*/
      margin-top: 1px;
      margin-bottom: 1px;
    }
    .blue:focus{
      color: white;
      background-color:orange;
    }
    .blue:hover {
      background: #2196F3;
      color: white;
    }

    #command_frame { width: 100%; height: 440px; }

  script(src='/scripts/jquery-3.5.1.min.js')
  //- Make sure you put this AFTER Leaflet's CSS
  script(src='https://unpkg.com/leaflet@1.7.1/dist/leaflet.js', integrity='sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==', crossorigin='anonymous')
  //- script(src='https://unpkg.com/leaflet/dist/leaflet-src.js') 지도 중복접속으로 인한 home화면 과부하의 원인?
  script(src='https://unpkg.com/leaflet-pulse-icon@0.1.0/src/L.Icon.Pulse.js')
  //- [e2s] 2022.10.19 mswon 뒤로가기로 이동시 새로고침
  script.
    function TrasferNewPage(_event){
      if ( _event.persisted || (window.performance && window.performance.navigation.type == 2) ){
        window.location.reload();
      }
    }
block content
  //- [e2s] 2022.10.19 mswon 뒤로가기로 이동시 새로고침
  body(onpageshow='TrasferNewPage(event)')
  nav(class='navbar navbar-expand-lg navbar-light bg-light sticky-top')
    a(class='navbar-brand', href='/') 전기차 충전 구역 현황
    button(class='navbar-toggler', type='button', data-toggle='collapse', data-target='#navbarNavAltMarkup', aria-controls='navbarNavAltMarkup', aria-expanded='false', aria-label='Toggle navigation')
      span(class='navbar-toggler-icon')
    div(class='collapse navbar-collapse', id='navbarNavAltMarkup')
      div(class='navbar-nav')
        //- a(class='nav-item nav-link active', href='#') Home span(class='sr-only')(current)
        a(class='nav-item nav-link active', href='/home?org=18') 의왕시
        a(class='nav-item nav-link disabled', href='#') 경기도
    span(style='float:right;')
      div(class='navbar-nav')
        a(class='nav-item nav-link active', href='/vnplace') 현황판
        a(class='nav-item nav-link active', href='/vnsnapshots') 스냅샷
        a(class='nav-item nav-link active', href='/reglist') 전기차 등록차량 편집
        a(class='nav-item nav-link active', href='/login/signout') 로그아웃
  div(class='container mt-5', style='float:left; width:100%;')
    //- div(class='panel-heading')
    - function getFormatDate(date) { return date.getFullYear() + '년 ' + (1+date.getMonth()) + '월 ' + date.getDate() + '일'; }
    - function getFormatTime(date) { return date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds(); }
    //-   h3(id='', class='panel-title') <span class='h3'>전기차 충전 구역 현황 <small>#{today.toLocaleString()}</small></span>
    div(class='row')
      - var date = getFormatDate(new Date());
      - var time = getFormatTime(new Date());
      div(class='col-sm-3 text-center')
        h3 #{date}
        h2 #{time}
      //- div(class='col-sm')
      //-   h5(id='panel_result') <span class='h5'> </span>
      div(class='col-sm m-0 p-0 text-center')
        div(class='card bg-light')
          div(class='card-top align-middle', style='height:2rem;')
            span(class='align-middle') 주차장
          div(class='card-body', style='height:3rem;')
            h4 #[span(id='panel_status_places')]
      div(class='col-sm m-0 p-0 text-center')
        div(class='card bg-light')
          div(class='card-top', style='height:2rem;')
            span 주차면
          div(class='card-body', style='height:3rem;')
            h4 #[span(id='panel_status_area')]
      div(class='col-sm m-0 p-0 text-center')
        div(class='card bg-gradient-secondary')
          div(class='card-top', style='height:2rem;')
            span 연결
          div(class='card-body', style='height:3rem;')
            h4(id='panel_status_connected')
      div(class='col-sm m-0 p-0 text-center')
        div(class='card bg-info')
          div(class='card-top', style='height:2rem;')
            span 빈공간
          div(class='card-body', style='height:3rem;')
            h4(id='panel_status_empty')
      div(class='col-sm m-0 p-0 text-center')
        div(class='card bg-primary')
          div(class='card-top', style='height:2rem;')
            span 충전중 #[br] #[span (전기차)]
          div(class='card-body', style='height:3rem;')
            h4(id='panel_status_charging')
      div(class='col-sm m-0 p-0 text-center')
        div(class='card bg-danger')
          div(class='card-top', style='height:2rem;')
            span 위반 #[br] #[span (일반차량)]
          div(class='card-body', style='height:3rem;')
            h4(id='panel_status_violation')

    div(class='row')
      br
    div(class='row')
      div(class='col-sm')
        div(id='uiwangMap', style='height: 880px;')
      div(class='col-sm')
        div(class='panel panel-primary', id='panel_places', style='width:560px;')
          div(class='panel-body fixed-table-head', style='height:870px;', id='place_list')
            table(class='table table-hover')
              thead
                tr
                  th 장소
                  th 주차면
                  th 상태
              tbody
                -placeList.forEach(place => {
                  tr(class='accordion-toggle collapsed m-0', id='placeHead_'+place.index, name='placeHead', data-toggle='collapse', data-parent='#placeHead'+place.index, href='#collapse'+place.index, onclick='DropDownPannelOpen('+place.index+')')
                    td #{place.name}
                    td #{place.areas.length}
                    td(onclick="event.cancelBubble=true")
                      -var areas = place.areas;
                      -for (var key in areas) {
                        -var area = areas[key];
                          button(id='pl_btn_type_'+area.place_idx+'_'+area.space_idx, name='areaState', class='btn btn-sm btn-outline-dark', type='button', onclick='homeAreaSelect('+area.place_idx+','+area.space_idx+')', style='margin-right:4px;') 빈자리
                      -};

                  tr(id='placeBody_'+place.index, name='placeBody', style='display:none', onclick='placeBodySelect('+place.index+')')
                    td(colspan='2')
                      table(class='table-borderless')
                        -var areas = place.areas;
                        -for (var key in areas) {
                          -var area = areas[key];
                          -var t_idx = area.place_idx+'_'+area.space_idx;
                            tr(id='pl_tr_'+t_idx, style='text-align:left; font-size: 14px;')
                              td
                                span(id='pl_td_type_'+t_idx) 연결중
                              td
                                span(id='pl_td_time_'+t_idx) 
                        -};
                    td(style='float:right;')
                      button(id='pl_btn_'+area.place_idx, name='btnDDPClose', class='_btn twitter', type='button', onclick='DropDownPannelClose('+area.place_idx+')', style='float:right; width:10%; font-size:6px; margin-right:6px;') X
                - });
        div(class='panel-context', id='edgeControlPanel', style='display:none')
          hr(style='border: dotted 5px orange;')
          table(class='table table', style='float:left; width:100%; margin: 2px 0px;')
            tr
              th(width='25%') 제어 패널
              td
                button(id='btnClose',class='_btn twitter', onclick='panel_close()', style='float:right; width:10%; font-size:8px; margin-right:6px;') X
            tr
              th(width='25%') 연결 상태
              td
                span(id='is_connected')
            tr
              th 충전소 위치
              td
                span(id='place')
                span(id='place_ip')
            tr
              th Text To Voice
                div(style='float:center; color:#2ab934; margin-top:6px;')
                  span(style='float:left; width:100%; font-size:12px;') 경광등 On/Off
                div
                  label(class='switch', style='float:left; width:78%; margin-top:2px;')
                    input(id='beacon', type='checkbox', onclick='req_beacon(this)')
                    div(class='slider')
              td(style='text-align:center')
                div
                  div
                    button(class='_btn twitter', id='btn_vol_mut', onclick='req_volume(0)', style='float:left; width:15%; font-size:8px; margin-right:6px;') Mute
                    button(class='_btn twitter', id='btn_vol_sml', onclick='req_volume(65)', style='float:left; width:15%; font-size:8px; margin-right:6px;') small
                    button(class='_btn twitter', id='btn_vol_max', onclick='req_volume(100)', style='float:left; width:15%; font-size:8px; margin-right:6px;') Max
                    span(id='volume', style='float:right; color:#2196F3; font-size:14px;')= voice
                div
                  select(class='form-control', name='tts_type', id='tts_type', style='float:left; width:74%; margin: 2px 0px; height:30px; font-size:12px;')
                    option(value='0')='사용자 지정 텍스트'
                    option(value='1')='전기차 충전구역에서 주차할 수 없습니다.'
                    option(value='2')='위험합니다.'
                    option(value='3')='3'
                    option(value='4')='4'
                    option(value='5')='5'
                div
                  input(type='text', class='form-control', id='text_to_speech', style='float:left; width:74%; height:30px; font-size:12px;', placeholder='전달할 텍스트를 입력하세요.')
                  button(class='_btn fb', id='btn_sound', onclick='req_tts()', style='float:right; width:25%; height:24px; font-size:12px;') 보내기
            tr
              th 시스템 설정
              td(style="text-align:center")
                div
                  input(type='text', class='form-control', id='server_ip', style='float:left; width:74%; height:24px; font-size:12px;', placeholder='서버 IP를 입력하세요.')
                  button(class='_btn fb', id='btn_server_ip', onclick='req_sethost()', style='float:right; width:25%; height:24px; font-size:12px;') 보내기
                div
                  button(class='_btn orange', id='btn_sysinfo', onclick='req_system(1, 0)', style='float:left; width:23%; height:22px; font-size:14px; margin-top:6px;') 정보
                  button(class='_btn green', id='btn_capture', onclick='req_system(4, 0)', style='float:center; width:23%; height:22px; font-size:14px; margin-top:6px; margin-right:6px;') 캡쳐
                  button(class='_btn twitter', id='btn_init', onclick='req_system(2, 0)', style='float:center; width:23%; height:22px; font-size:14px; margin-top:6px; margin-left:6px;') 초기화
                  button(class='_btn google', id='btn_reboot', onclick='req_system(3, 0)', style='float:right; width:23%; height:22px; font-size:14px; margin-top:6px;') 재시작
            tr
              th 주차 시간
              td(style="text-align:left")
                span(id='parkingTime')
            tr
              th 전기차 등록/삭제
              td(id='reg_ev_num', style="text-align:left")
                input(type='text', class='form-control', id='vehicleNumber', style='float:left; width:55%; height:24px; font-size:16px; color=#0070C0;', placeholder='자동차 번호를 입력하세요.')
                button(class='_btn fb', id='btn_num_del', onclick='req_system(9, 0)', style='float:right; width:20%; height:24px; font-size:14px;') 번호 삭제
                button(class='_btn fb', id='btn_num_reg', onclick='req_system(8, 0)', style='float:ringt; width:20%; height:24px; font-size:14px; margin-left:10px;') 번호 등록
  div(id='status')

block body-scripts
  script.
    var markersPinArr =  new Array();
    var markersInfoArr = JSON.parse('!{markersInfoArr}');
    var markersControlInfoArr = new Array();
    var url = '/home/status/-1';
    let evtSource = new EventSource(url);

    try {
      evtSource.onmessage = function(event) {
        if (event.data && event.data != '') {
          var dbody = JSON.parse(event.data);
          draw_status(dbody);
        }
        console.log('[INFO]'+' on server status message');
      }

      evtSource.onerror = function(obj) {
        // console.log('[ERROR] on server error message');
      }
    } catch (error) {
      console.log(error);
    } 

    var g_map = L.map('uiwangMap').setView([37.3550, 126.9752], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      minZoom: 13, maxZoom: 19,
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(g_map);

    var g_icon_red = L.icon({

      iconUrl: '/images/marker-icon-red.png',
      shadowUrl: '/images/marker-shadow.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowSize: [41, 41]
    });

    var g_icon_green = L.icon({
      iconUrl: '/images/marker-icon-green.png',
      shadowUrl: '/images/marker-shadow.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowSize: [41, 41]
    });

    var g_icon_blue = L.icon({
      iconUrl: '/images/marker-icon-blue.png',
      shadowUrl: '/images/marker-shadow.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowSize: [41, 41]
    });

    var g_icon_gold = L.icon({
      iconUrl: '/images/marker-icon-gold.png',
      shadowUrl: '/images/marker-shadow.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowSize: [41, 41]
    });

    var g_icon_violet = L.icon({
      iconUrl: '/images/marker-icon-violet.png',
      shadowUrl: '/images/marker-shadow.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowSize: [41, 41]
    });

    var g_icon_grey = L.icon({
      iconUrl: '/images/marker-icon-grey.png',
      shadowUrl: '/images/marker-shadow.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowSize: [41, 41]
    });

    var g_icon_black = L.icon({
      iconUrl: '/images/marker-icon-black.png',
      shadowUrl: '/images/marker-shadow.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowSize: [41, 41]
    });

    var blueIcon = L.icon.pulse({ color: "blue", fillColor: "blue", animate: false});
    var redIcon = L.icon.pulse({ color: "red", fillColor: "red", animate: true});

    var selectedPlaceIndex = -1;
    var selectedAreaIndex = -1;

    InitMarkerPin();

    //=============================================================================================
    //핀 초기화
    function InitMarkerPin() {
      for (var idx=0; idx<markersInfoArr.length; idx++) {
        DrawMarkerPin(markersInfoArr[idx]);
      }
    }
    
    //(핀선택시) 주차장번호 취득
    function Get_place_idx(_LatLng) {
      for (var idx=0; idx<markersInfoArr.length; idx++) {
        if (_LatLng.lat == markersInfoArr[idx].lat && _LatLng.lng == markersInfoArr[idx].lon) return markersInfoArr[idx].place_idx;
      }
      return -1;
    }

    //경광등 제어
    function req_beacon(_obj) {
      req_command(selectedPlaceIndex, selectedAreaIndex, 61, (_obj.checked==true?'on':'off'));
    }

    //볼륨제어
    function req_volume(_vol) {
      req_command(selectedPlaceIndex, selectedAreaIndex, 51, _vol);
      document.getElementById('volume').innerHTML = '소리크기 : ' + _vol;
    }

    //Text To Speech 제어
    function req_tts() {
      var txt = '';
      var sel = document.getElementById('tts_type');
      var idx = sel.options[sel.selectedIndex].value;
      if (idx == 0) {
        txt = document.getElementById('text_to_speech').value;
      } else {
        txt = sel.options[sel.selectedIndex].text;
      }
      const url_enc = encodeURI(txt);
      req_command(selectedPlaceIndex, selectedAreaIndex, 71, url_enc);
    }

    //edge단말의 서버ip 설정
    function req_sethost() {
      var host = document.getElementById('server_ip').value;
      //const url_enc = encodeURI(txt);
      req_system(2, host);
    }

    //edge단말에 요청
    function req_system(_cmd, _val) {
      if (_cmd == 8 || _cmd == 9) {
        _val = document.getElementById('vehicleNumber').value;
        if (!_val || _val == '') {
          alert("자동차 번호를 입력하세요.");
          return false;
        }
      }
      if (_cmd != 1 && _cmd != 4 && confirm("실행하시겠습니까?") == false) { //취소
        return false;
      }
      req_command(selectedPlaceIndex, selectedAreaIndex, _cmd, _val);
      return true;
    }

    //edge단말 제어
    function req_command(_idx, _spc, _cmd, _val) {
      if (_idx >= 0) {
        //$('#command_frame').attr('src', '/home/command/?host='+_host+'&cmd='+_cmd+'&value='+_val);
        req_div_status(_cmd, '/home/command/?idx='+_idx+'&spc='+_spc+'&cmd='+_cmd+'&val='+_val);
      }
    }

    //제어패널 갱신
    function req_bottom_panel(reqPlaceIndex, reqAreaIndex) {
      console.log("request panel:" + reqPlaceIndex + ", " + reqAreaIndex);
      selectedPlaceIndex = reqPlaceIndex;
      selectedAreaIndex = reqAreaIndex;
      panel_init();
      $('#status').load('/home/select/?idx='+ reqPlaceIndex+'&spc='+ reqAreaIndex, function(_resp){
        const _respData = JSON.parse(_resp);
        markersInfoArr[_respData.markerInfo.place_idx] = _respData.markerInfo;
        DrawMarkerPin(_respData.markerInfo);
        draw_list(_respData.listButtonInfo);
        draw_result(_respData.resultPanel);
        draw_bottom(_respData.bottomPanelInfo);
        $('#status').innerHTML = '';
        $('#status').hide();
      });
      
    }
    //제어패널 닫기
    function panel_close()
    {
      selectedPlaceIndex = -1;
      selectedAreaIndex = -1;
      document.getElementById('place_list').style.height = '870px';
      $('#edgeControlPanel').hide();
    }
    
    //주차면 선택
    function homeAreaSelect(_place_idx, _space_idx) {
      console.log('[HOME]AreaSelect('+_place_idx+', '+_space_idx+')');
      
      if (selectedPlaceIndex != _place_idx || selectedAreaIndex != _space_idx) 
        {
          req_bottom_panel(_place_idx, _space_idx);
          DropDownPannelOpen(_place_idx);
          panel_open();
        }      
    }

    function placeBodySelect(_place_idx) {
      g_map.setView([markersInfoArr[_place_idx].lat, markersInfoArr[_place_idx].lon], 13);
    }

    //드롭다운패널 열기 (주차장번호)
    function DropDownPannelOpen(_place_idx) {
      console.log('DropDownPannel Open ' + _place_idx);
      $('#placeHead_'+_place_idx).addClass('highlight').siblings().removeClass('highlight');
      g_map.setView([markersInfoArr[_place_idx].lat, markersInfoArr[_place_idx].lon], 13);
      $('#placeBody_'+_place_idx).show();
      // req_bottom_panel(_place_idx, selectedAreaIndex);
    }

    //드롭다운패널 닫기 (주차장번호)
    function DropDownPannelClose(_place_idx) {
      console.log('DropDownPannel Close :' + _place_idx);
      $('#placeBody_'+_place_idx).hide();
    }

    

    function req_div_status(_cmd, _val) {
      $('div#status').load(_val, function(_statusMsg) {});
      $('div#status').hide();
      switch(_cmd) {
        case 1 :
          $('div#status').show();
          break;
        case 4:
          alert('캡쳐하였습니다.');
          break;
        case 51 :
          alert('음량이 변경되었습니다.');
          break;
        case 71 :
          alert('음성안내를 출력하였습니다.');
          break;
        default :
          // none
          break;
      }
    }

    
    //화면 갱신
    function draw_status(_dbody) {
      switch(_dbody.dataType) {
      case 0: //단일 갱신
        markersInfoArr[_dbody.markerInfo.place_idx] = _dbody.markerInfo;
        DrawMarkerPin(_dbody.markerInfo);
        draw_list(_dbody.listButtonInfo);
        draw_result(_dbody.resultPanel);        
        break;
      case 1: // 전체 갱신 
        markersInfoArr = _dbody.markerInfoList;
        for(var i= 0; i < _dbody.markerInfoList.length; i++){DrawMarkerPin(_dbody.markerInfoList[i]);}
        for(var r= 0; r < _dbody.listButtonInfoList.length; r++){draw_list(_dbody.listButtonInfoList[r]);}
        for(var r= 0; r < _dbody.listButtonInfoList.length; r++){draw_list(_dbody.listButtonInfoList[r]);}
        draw_result(_dbody.resultPanel);        
        break;
      case 2:
        markersInfoArr[_dbody.markerInfo.place_idx] = _dbody.markerInfo;
        DrawMarkerPin(_dbody.markerInfo);
        draw_list(_dbody.listButtonInfo);
        draw_result(_dbody.resultPanel);
        draw_bottom(_dbody.bottomPanelInfo);
      default: // 0: 마커 및 상태정보 갱신

        break;
      }
    }

    //핀 그리기
    function DrawMarkerPin(_markerInfo) {
      if (markersPinArr.length > 0) {
        var markerPin = markersPinArr[_markerInfo.place_idx];
        if(markerPin !== undefined) g_map.removeLayer(markersPinArr[_markerInfo.place_idx]);
      }

      // https://leafletjs.com/reference-1.0.3.html#marker-option
      var new_icon = null;
      var markerState = _markerInfo.status;
      switch(markerState) {
      case 1: // 일반차
        new_icon = g_icon_red;
        break;
      case 2: // 전기차
        new_icon = g_icon_blue;
        break;
      case 3: // 영업차
        new_icon = g_icon_gold;
        break;
      case 98: // Time Over
        new_icon = g_icon_violet;
        break;
      case 99: // 연결해제
        new_icon = g_icon_black;
        break;
      default: //빈자리
        new_icon = g_icon_grey;
        break;
      }
      var opt = {icon:new_icon, title:_markerInfo.name, alt:'#placeHead_'+_markerInfo.place_idx, id:'marker_'+_markerInfo.place_idx};

      var markerPin = L.marker([_markerInfo.lat, _markerInfo.lon], opt)
        .on('click', function(_e) {
          var place_idx = Get_place_idx(_e.latlng);
          $('#placeHead_'+place_idx).click();
        })
        .on('mouseover', function(_e) {
          var place_idx = Get_place_idx(_e.latlng);
          $('#placeHead_'+place_idx).addClass('highlight').siblings().removeClass('highlight');
        })
        .on('mouseout', function(_e) {
          var place_idx = Get_place_idx(_e.latlng);
           $('#placeHead_'+place_idx).removeClass('highlight');
        })
        .addTo(g_map);

      markersPinArr[_markerInfo.place_idx] = markerPin;
    }
    //- 주차면 정보 갱신
    function draw_list(_listItemInfo) {
      var fcolor = 'white';
      var bcolor = 'white';
      var status = '빈자리';
      var vehicleState = _listItemInfo.status; // 0:비어있음, 1:일반차, 2:전기차, 3:영업, 98:OVER 99:연결끊김
      // s_status : true =  자동차 있음, false : 자동차 없음.

      switch(vehicleState) {
      case 0: //빈자리
        bcolor = '#FAFAFA';
        fcolor = 'black';
        status = '빈 자리';
        break;
      case 1: // 일반차
        bcolor = '#FF0000';
        fcolor = 'white';
        status = '일반차량';
        break;
      case 2: // 전기차
        bcolor = '#0000FF';
        fcolor = 'white';
        status = '전기차량';
        break;
      case 3: // 영업차
        bcolor = '#FFFF00';
        fcolor = 'black';
        status = '영업차량';
        break;
      case 98: // 충전시간 초과
        bcolor = '#AA00FF';
        fcolor = 'white';
        status = '시간초과';
        break;
      default:
        bcolor = '#000000';
        fcolor = 'white';
        status = '연결해제';
        break;
      }

      var t_idx = _listItemInfo.place_idx+'_'+_listItemInfo.space_idx;
      var btn = document.getElementById('pl_btn_type_'+t_idx);
      if (btn) {
        btn.style.color = fcolor;
        btn.style.background = bcolor;
        btn.innerHTML = status;
      }

      var td_type = document.getElementById('pl_td_type_'+t_idx);
      if (td_type) {
        if (vehicleState == 0 || vehicleState == 99) td_type.innerHTML = '<a href=\'/vnlist/list/'+_listItemInfo.host+'\'> '+status+'</a>';
        else td_type.innerHTML = '<a href=\'/vnlist/list/'+_listItemInfo.host+'\'>['+_listItemInfo.type+']'+_listItemInfo.number+'</a>';
       
      }

      var td_time = document.getElementById('pl_td_time_'+t_idx);
      if (td_time) {
        if (vehicleState == 0 || vehicleState == 99) td_time.innerHTML = '';
        else td_time.innerHTML = '입차시간 : &nbsp '+_listItemInfo.timeStamp;
      }
    }

    //- 종합패널 갱신
    function draw_result(_resultPanelInfo) {
      document.getElementById('panel_status_places').innerHTML = _resultPanelInfo.places;
      document.getElementById('panel_status_area').innerHTML = _resultPanelInfo.area;
      document.getElementById('panel_status_connected').innerHTML = _resultPanelInfo.connected;
      document.getElementById('panel_status_empty').innerHTML = _resultPanelInfo.empty;
      document.getElementById('panel_status_charging').innerHTML = _resultPanelInfo.charging;
      document.getElementById('panel_status_violation').innerHTML = _resultPanelInfo.violation;
    }
    //- 제어패널 갱신
    function draw_bottom(_bottomPanelInfo) {
      if(_bottomPanelInfo == undefined)
      {
        return;
      } else {
        document.getElementById('btn_vol_mut').disabled = false;
        document.getElementById('btn_vol_sml').disabled = false;
        document.getElementById('btn_vol_max').disabled = false;
        document.getElementById('btn_server_ip').disabled = false;
        document.getElementById('btn_sound').disabled = false;
        document.getElementById('btn_init').disabled = false;
        document.getElementById('btn_sysinfo').disabled = false;
        document.getElementById('btn_capture').disabled = false;
        document.getElementById('btn_reboot').disabled = false;
        document.getElementById('btn_num_del').disabled = false;
        document.getElementById('btn_num_reg').disabled = false;
      }
      var vehicleState = 99;
      if(_bottomPanelInfo.status != undefined)
      {
        vehicleState = _bottomPanelInfo.status; // 0:비어있음, 1:일반차, 2:전기차, 3:영업, 98:OVER, 99:연결해제
      }
      
      if(vehicleState == 99) {
        document.getElementById('is_connected').innerHTML = '연결해제';
        document.getElementById('place').innerHTML = _bottomPanelInfo.placeName + ' '+ (_bottomPanelInfo.space_idx+1) + '면';
        document.getElementById('place_ip').innerHTML = '('+_bottomPanelInfo.host+')';
        document.getElementById('beacon').checked = false;
        document.getElementById('parkingTime').innerHTML = '';
        document.getElementById('volume').innerHTML = '소리크기 : ';
        document.getElementById('vehicleNumber').value = '';
      } 
      else {
        document.getElementById('is_connected').innerHTML = '연결 ( Connected Time : '+_bottomPanelInfo.sysTime+' )';
        document.getElementById('place').innerHTML = _bottomPanelInfo.placeName + ' '+(_bottomPanelInfo.space_idx+1) + '면';
        document.getElementById('place_ip').innerHTML = '('+_bottomPanelInfo.host+')';
        document.getElementById('beacon').checked = (_bottomPanelInfo.beacon==1?true:false);
        document.getElementById('parkingTime').innerHTML = _bottomPanelInfo.parkingTime;
        document.getElementById('volume').innerHTML = '소리크기 : '+_bottomPanelInfo.volume;
        document.getElementById('vehicleNumber').value = ( vehicleState != 0 ) ?_bottomPanelInfo.number : '';
      }
    }

    function panel_init(){
        document.getElementById('is_connected').innerHTML = '연결 중 ... ';
        document.getElementById('place').innerHTML = '';
        document.getElementById('place_ip').innerHTML = '';
        document.getElementById('beacon').checked = false;
        document.getElementById('parkingTime').innerHTML = '';
        document.getElementById('volume').innerHTML = '소리크기 : 0';
        document.getElementById('vehicleNumber').value = '';

        document.getElementById('btn_vol_mut').disabled = true;
        document.getElementById('btn_vol_sml').disabled = true;
        document.getElementById('btn_vol_max').disabled = true;
        document.getElementById('btn_server_ip').disabled = true;
        document.getElementById('btn_sound').disabled = true;
        document.getElementById('btn_init').disabled = true;
        document.getElementById('btn_sysinfo').disabled = true;
        document.getElementById('btn_capture').disabled = true;
        document.getElementById('btn_reboot').disabled = true;
        document.getElementById('btn_num_del').disabled = true;
        document.getElementById('btn_num_reg').disabled = true;
    }

    function panel_open(){
      document.getElementById('place_list').style.height = '540px';
      $('#edgeControlPanel').show();
    }
